#include "jump_boost.h"

#include "../Characters/character.h"
#include "../Characters/player.h"

namespace Buyables {

///////////////////////////////////////////////////////////////////////////////////////////////////
/* Static Variables */
///////////////////////////////////////////////////////////////////////////////////////////////////

const float JumpBoost::JUMP_MODIFY = -5.f;
const std::string JumpBoost::ICON_TEXTURE =
    "Ressources/Images/Buyables/jump_boost.png";
const sf::Vector2f JumpBoost::ICON_SIZE(80, 80), JumpBoost::OBJECT_SIZE(50, 50);

sf::Texture JumpBoost::texture;

///////////////////////////////////////////////////////////////////////////////////////////////////
/* JumpBoost() */
///////////////////////////////////////////////////////////////////////////////////////////////////
JumpBoost::JumpBoost(Characters::Character* character, uint16_t run_time)
    : JumpBoost(run_time) {
  assignTo(character);
}

///////////////////////////////////////////////////////////////////////////////////////////////////
/* JumpBoost() */
///////////////////////////////////////////////////////////////////////////////////////////////////
JumpBoost::JumpBoost(uint16_t run_time)
    : Buyable(getTexture()), time(run_time) {
  this->sprite.setScale(OBJECT_SIZE.x / 50, OBJECT_SIZE.y / 50);
}

///////////////////////////////////////////////////////////////////////////////////////////////////
/* getType() */
///////////////////////////////////////////////////////////////////////////////////////////////////
Type JumpBoost::getType() const { return Type::JumpBoost; }

///////////////////////////////////////////////////////////////////////////////////////////////////
/* update() */
///////////////////////////////////////////////////////////////////////////////////////////////////
void JumpBoost::update(float factor) {
  if (!this->is_active) return;  // Do nothing if inactive
  if (this->clock.getElapsedTime().asSeconds() >= this->time) {
    this->is_active = false;
    this->character->modifyJumpPower(-1 * JUMP_MODIFY);
  }
}

///////////////////////////////////////////////////////////////////////////////////////////////////
/* assignTo() */
///////////////////////////////////////////////////////////////////////////////////////////////////
void JumpBoost::assignTo(Characters::Character* character) {
  Buyable::assignTo(character);
  character->addBuyable(this);
  this->is_active = true;
  this->character->modifyJumpPower(JUMP_MODIFY);

  // Change drawing stuff
  this->sprite.setScale(ICON_SIZE.x / 50, ICON_SIZE.y / 50);

  this->clock.restart();
}

///////////////////////////////////////////////////////////////////////////////////////////////////
/* getTexture() */
///////////////////////////////////////////////////////////////////////////////////////////////////
sf::Texture& JumpBoost::getTexture() {
  if (texture.getSize().x == 0)
    if (!texture.loadFromFile(ICON_TEXTURE)) exit(1);
  return texture;
}
}  // namespace Buyables